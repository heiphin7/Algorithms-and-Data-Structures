package AdvancedProblems;

public class NumberPartition {

    /*
        by @heiphin7

        –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –∑–∞–¥–∞–Ω–Ω–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ùëõ
        n –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å –Ω–∞ —Å—É–º–º—É –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, –ø—Ä–∏—á—ë–º –ø–æ—Ä—è–¥–æ–∫ —Å–ª–∞–≥–∞–µ–º—ã—Ö –Ω–µ –≤–∞–∂–µ–Ω.

    */

    public static int countPartition(int n) {
        int[] dp = new int[n + 1];

        dp[0] = 1;

        for(int i = 1; i <= n; i++) {
            for (int j = i; j <= n; j++) {
                dp[i] += dp[j-i];
            }
        }

        return dp[n];
    }

}
